<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A0YkAANGJAADRiQAA0YkAANGJAADRiQAA0YkAANGJAAAAAADYAwMD/wMDA/8AAADDAAAAWtGJ
        AADRiQAA0YkAANGJAAAAAABaAAAAwwMDA/8DAwP/AAAA2NGJAADRiQAA0YkAANGJAADRiQAA0YkAANGJ
        AADRiQAA0YkAAP///wDRiQAA0YkAANGJAADRiQAA0YkAANGJAADRiQAA0YkAAAAAAP8sLCz/LCws/yIi
        Iv8LCwv/FQ4B/wAAAP8AAAD/FQ4C/wsLC/8iIiL/LCws/ywsLP8AAAD/0YkAANGJAADRiQAA0YkAANGJ
        AADRiQAA0YkAANGJAADRiQAA////ANGJAADRiQAA0YkAANGJAADRiQAA0YkAANGJAADPkh1/AAAA/29e
        P//ZnBv/4rA3/+m/Tv/syV7/89Z2//TZgf/x03z/9eO//+7Snv/gsFL/f21J/wAAAP/er0mf0YkAANGJ
        AADRiQAA0YkAANGJAADRiQAA0YkAANGJAAD///8A0YkAANGJAADRiQAA0YkAANGJAADJiBg00I0O8NOQ
        Df/YoSn/4bVG/+W5Rv/nvUb/6sFK/+zGUf/uylj/781j//HSb//24qP/+/LY//fouf/03pv/5r5j/9ib
        Iv/anyr52ac/R9GJAADRiQAA0YkAANGJAADRiQAA0YkAAP///wDRiQAA0YkAANGJAADRiQAAyIYUitCK
        Bf3QkRv/1KA4/9ekM//apir/3age/+GrF//jrA//5q8Q/+exDv/osxX/6rgj/+q7L//rwkT/7Mda/+7P
        dv/14rD/9ue+/9+uR//UkA7+2KI3p9GJAADRiQAA0YkAANGJAADRiQAA////ANGJAADRiQAA0YkAAMaB
        EJzRiQH/yowg/8qQKv/Mjhv/0ZMP/9eYBf/cnQH/36MB/+KmAv/kqgT/5q0I/+evC//nsRD/57IV/+ez
        Gf/msh7/5bMp/+e/Vf/rzIH/58Z0/+G1V//RigP/1ZostdGJAADRiQAA0YkAANGJAAD///8A0YkAANGJ
        AADEfg960YkB/8SDHv/BgiH/w38O/8yJBf/UkAD/2ZcA/9ycAP/enwD/36IB/+GkAv/ipgT/46gG/+Sp
        CP/kqgv/5KsO/+SrEf/jqhP/4acV/96nI//cqz7/4LZd/96wUf/RigL/0pYoktGJAADRiQAA0YkAAP//
        /wDRiQAAwXoOJs6HA/3Dfhf/u3gb/711CP/HgQL/0YsA/9WRAP/YlQD/2pcA/9uaAP/dnAD/5rM1/+3G
        Yf/vy2z/7shj/+e3Of/hpAf/4aQJ/+GkCv/fogr/3J8L/9ebEf/SmiX/2KhK/9ikPv/SjAj+zY8kL9GJ
        AADRiQAA////ANGJAADHgAjXxH4O/7hxGP+3bQX/xXwB/8+HAP/UjQD/1ZAA/9eTAP/YlQD/2pcA/+Ks
        LP/aq0T/q24R/6NkCv+rbhH/3K1G/+SxL//enwT/3Z4E/92dBf/cnAX/2ZcF/9KQCP/Kihb/050//9OX
        Jv/Qjhbh0YkAANGJAAD///8AwHcLKNCIAf+5dBv/tWkI/8F1Af/NhAD/04sA/9SNAP/VjwD/1pEA/9iT
        AP/ZlQD/5bVE/5FTDf+cWwj/p2QJ/5xbCP+RUw3/57hF/9yaAf/cmgL/25kC/9qXAv/ZlgL/1JAC/8uF
        Bf/Fghf/059D/9GKAv/IhRkv0YkAAP///wDEfAiox4AJ/7duEv+6bgH/y4AA/9KKAP/UjAD/1Y4A/9WQ
        AP/WkgD/15QA/9iWAP/jsTv/ZCsD/49NB/+PTQf/j00H/2QrA//ksjv/2pkB/9qYAf/ZlwH/2JYB/9iU
        AP/XkgD/0IkA/8J5BP/JjSv/0I4W/8uIE7LRiQAA////AMuCBenBeA//uW0J/8N3AP/QhwD/1Y0A/9aP
        AP/XkQD/2JMA/9iUAP/ZlgD/2pcA/+GqKf9JFwH/eDUE/3g1BP94NQT/SRcB/+GqKf/amAD/2pcA/9mW
        AP/ZlQD/2JMA/9eSAP/TjAD/xnwB/8J9Fv/OjyP/z4oL7tGJAAD///8AzocC/L54Ev+5bQP/yIEA/9SQ
        AP/XkwD/2JUA/9mXAP/ZmQD/2poA/9ucAP/anQH/36cX/0ETAv9UGQH/ZSEC/1QZAf9BEwL/3qYX/9qc
        Af/amgD/2ZkA/9mXAP/YlgD/15QA/9WRAP/JgwD/vHMG/8yPJ//PiQT90YkAAP///wDPiQD+vnoT/7py
        Af/KhwD/1ZUB/9eZAf/YnAH/2J4B/9mgAf/ZoQH/2aMB/9mkAf/apgX/pG0I/0MUAv8mAwD/QxQC/6Nr
        CP/ZpAX/16EB/9efAf/WnQH/1psB/9WZAf/VmAH/1JQB/8mHAP+5cQH/yY8l/8+KAf/RiQAA////AMyK
        AP7AgBH/u3kB/8qMAf/VnAH/16EC/9ekAv/WpgL/1qgC/9aqAv/XqwL/16wD/9etA//WrgP/1q0D/9at
        A//VrAP/1asD/9WqA//UqAL/1KYC/9OkAv/TogL/06AC/9SdAf/RlwH/xokB/7l0Af/JjyD/zIsC/tGJ
        AAD///8AyIwD9cGID/+6gAP/xJEC/8+jA//TqgP/0awD/9KuBP/RsQT/0LMF/8+0Bv/QtQb/z7YH/8+2
        B//Ptgf/zrYH/861Bv/OtQb/zbMG/82xBv/NrgX/zasF/82pBP/NpgP/zKQD/8qbAv++iQH/tXsE/8OR
        Gv/IjQT20YkAAP///wDFjwXQv5EM/7qPCf+9mAP/x6kE/8uyBf/Ktgb/yLkH/8e6CP/GvQn/xb4J/8W/
        Cv/DwAr/wsAL/8LADP/CwAz/wr8N/8K+Df/CvQz/wroL/8K4Cv/CtQn/w7IH/8SvB//Fqwb/wKAE/7OM
        Av+ziAv/vZMT/8WRB9PRiQAA////AMeVCW22lgj8t54P/7SfBf+6rwf/vboJ/7vACv+6wgz/uMQN/7bG
        Dv+0yA//s8gR/7LKE/+xyhP/ssoV/7HKFf+yyhf/scgV/7LHFf+zxRT/s8IR/7TAEP+0vA3/trkM/7Wz
        Cv+wpAf/qJEE/7GYE/+zlwv8yJkNc9GJAAD///8A1JcOE6mWBf2xrhj/qK4M/6i2C/+qwQ3/qsgQ/6bL
        Ev+kzRT/otAW/6HQGP+f0hv/n9Id/57TH/+f1CL/n9Qk/6DTJP+g0iT/otEk/6HPIv+izR//ossb/6PH
        F/+kwxT/orgP/52pCv+cnwv/qagc/6SYBv3WmxET0YkAAP///wDRiQAAqp0MrZqrEvyfvxz/lb8P/5TI
        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
        AOP/wAP3/+AP///wP///8H////j////8//8=
</value>
  </data>
</root>